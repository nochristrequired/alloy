name: Publish liballoyparser release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version number to publish (for example, 0.1.0)
        required: true

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and publish liballoyparser
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod
          cache: true

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.11'

      - name: Install Python requirements
        run: pip install --requirement python/requirements.txt

      - name: Normalize version input
        env:
          INPUT_VERSION: ${{ github.event.inputs.version }}
        run: |
          version="${INPUT_VERSION}"
          version="${version#v}"
          version="${version#V}"
          if [[ -z "$version" ]]; then
            echo "version input must not be empty" >&2
            exit 1
          fi
          if [[ ! "$version" =~ ^[0-9]+(\.[0-9]+)*$ ]]; then
            echo "version must be numeric segments separated by dots" >&2
            exit 1
          fi
          echo "VERSION=${version}" >> "$GITHUB_ENV"
          echo "TAG_NAME=liballoyparser-v${version}" >> "$GITHUB_ENV"

      - name: Run Go parser tests
        run: |
          set -o pipefail
          pushd syntax >/dev/null
          go test ./parser | tee ../go-test.log
          popd >/dev/null

      - name: Run Python integration tests
        run: |
          set -o pipefail
          pytest python/tests | tee python-test.log

      - name: Build shared library
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 1
        run: make liballoyparser

      - name: Package shared library
        id: package
        run: |
          ASSET_NAME="liballoyparser-linux-amd64-v${VERSION}.tgz"
          tar -czf "dist/${ASSET_NAME}" -C dist liballoyparser.so
          echo "asset_name=${ASSET_NAME}" >> "$GITHUB_OUTPUT"
          echo "asset_path=dist/${ASSET_NAME}" >> "$GITHUB_OUTPUT"

      - name: Collect test logs
        id: logs
        run: |
          echo "go_tests<<EOF" >> "$GITHUB_OUTPUT"
          cat go-test.log >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
          echo "python_tests<<EOF" >> "$GITHUB_OUTPUT"
          cat python-test.log >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Publish release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: liballoyparser v${{ env.VERSION }}
          body: |
            ## Test results

            ### Go parser tests
            ```
            ${{ steps.logs.outputs.go_tests }}
            ```

            ### Python integration tests
            ```
            ${{ steps.logs.outputs.python_tests }}
            ```
          files: ${{ steps.package.outputs.asset_path }}
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
